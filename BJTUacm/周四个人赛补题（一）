C题
题意：给了两种叠塔的同学，一种只能一次用两块砖，另一种用三块砖，而且不同同学叠塔的高度不一样，问叠塔最高的高度的

最小值是多少

这里我们用二分寻找最小值，满足的条件为：假设高度为x, 两块的高度至少要2 * n，三块的高度至少要3 * m,但是有可能有公约数 ，
所以n+m <= x / 2 + x / 3 - x / 6
#include<cstdio>
#include<iostream>
using namespace std;
int n,m;
bool judge(int mid)
{
    if(n <= mid / 2 && m <= mid / 3 && (mid / 2 + mid / 3 - mid / 6 >= n + m))
        return 1;
    else
        return 0;
}
int main()
{
    cin>>n>>m;
    int l = 1,r = 3000000,pos;
    while(l <= r)
    {
        int mid = (l + r) / 2;
        if(judge(mid))
        {
            pos = mid;
            r = mid - 1;
        }
        else
        {
            l = mid + 1;
        }
    }
    cout<<pos<<endl;
    return 0;
}
B题
问最小修改匹配串的次数使得子串没有下面的串
贪心的每次修改最右边的那个，因为覆盖的面最大
#include<cstdio>
#include<iostream>
#include<cstring>
using namespace std;
const int MAXN = 1e5 + 10;
char s[MAXN];
char t[50];
int len1,len2;
bool judge(int x)
{
    for(int i = 0; i < len2; i++)
    {
        if(t[i] != s[x + i])
            return 0;
    }
    return 1;
}
int main()
{
    scanf("%s",s);
    scanf("%s",t);
    len1 = strlen(s);
    len2 = strlen(t);
    int cnt = 0;
    for(int i = 0; i < len1; i++)
    {
        if(judge(i))
        {
            s[i + len2 - 1] = '#';
            cnt++;
        }
    }
    cout<<cnt<<endl;
    return 0;
}
