1850. 预言家困境
/*这道题就是直接建立一个图两种颜色染色，分成狼人阵营和好人阵营。对应狼人指认的一定是好人，好人指认的是狼人
将每一个好人和狼人配对，好人标记为1，狼人标记为2，预言家一定是好人。
然后深度搜索，先把预言家赋值为1，然后对于每一个输入的好人身份，标记为1，找他对应匹配的
狼人身份，标记为2，深度搜索下去直到所有的都被标记返回再继续找。对于每一个狼人身份同理。
最后将标记的1和2分别对应输出就行*/
#include<bits/stdc++.h>
using namespace std;
const int maxn = 5e5 + 10;
vector<int>vec[maxn];
vector<int>a,b;
int vis[maxn];
void dfs(int x,int y)
{
    if(vis[x])return;
    vis[x] = y;
    for(int i = 0; i < vec[x].size(); i++)
    {
        if(y == 1)
          dfs(vec[x][i],2);
        else
          dfs(vec[x][i],1);
    }
}
int main()
{
    int n,p,q;
    cin>>n;
    for(int i = 1; i < n; i++)
    {
        int x;
        cin>>x;
        vec[i].push_back(x);
        vec[x].push_back(i);
    }
    dfs(n,1);
    cin>>p;
    while(p--)
    {
        int x;
        cin>>x;
        dfs(x,1);
    }
    cin>>q;
    while(q--)
    {
        int x;
        cin>>x;
        dfs(x,2);
    }
    for(int i = 1; i < n; i++)
    {
        if(vis[i] == 1)a.push_back(i);
        else if(vis[i] == 2) b.push_back(i);
    }
    printf("%d",a.size());
    for(int i = 0; i < a.size(); i++)
    {
        printf(" %d",a[i]);
    }
    printf("\n");
    printf("%d",b.size());
    for(int i = 0; i < b.size(); i++)
    {
        printf(" %d",b[i]);
    }
    printf("\n");
    return 0;
}
1856. 奇怪的求和
数论，注意是1-n所有的因子，这期间每一个数都可以作为因子，所以直接相除就好
#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<ctime>
using namespace std;
typedef long long ll;
int main()
{
    int n;
    scanf("%d",&n);
    int ans = 0;
    for(int i = 1; i <= n; i++)
        ans += n / i;
   printf("%d\n",ans);
    return 0;
}
