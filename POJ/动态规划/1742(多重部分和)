#include<cstdio>
#include <iostream>
#include<cstring>
using namespace std;
const int N = 110;
const int M = 100010;
int a[N],b[N];
int dp[M];
int n,m;
//定义dp[i][j]前i种数加和得到j时第i种数最多能剩下的个数，复杂度O(nm)
void solve()
{
    memset(dp,-1,sizeof(dp));
    dp[0] = 0;
    for(int i = 1; i <= n; i++)
        for(int j = 0; j <= m; j++)
    {
        if(dp[j] >= 0)
            dp[j] = b[i];
        else if(j < a[i] || dp[j - a[i]] <= 0)
            dp[j] = -1;
        else
            dp[j] = dp[j - a[i]] - 1;
    }
}
int main()
{
    while(scanf("%d%d",&n,&m) && n && m)
    {
        for(int i = 1; i <= n; i++)
            scanf("%d",&a[i]);
        for(int i = 1; i <= n; i++)
            scanf("%d",&b[i]);
        solve();
        int cnt = 0;
        for(int i = 1; i <= m; i++)
        {
            if(dp[i] >= 0)
                cnt++;
        }
        printf("%d\n",cnt);
    }
    //cout << "Hello world!" << endl;
    return 0;
}
