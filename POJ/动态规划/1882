//完全背包 题意：http://blog.csdn.net/vmurder/article/details/39519693
注意数组别开小了我的就是因为数组开小了结果莫名奇妙改变了原数组的值Orz...dp[i]表示价值为i的最小的使用邮票数量
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int maxn = 1100;
const int INF  =0x3f3f3f3f;
int dp[maxn],a[maxn][maxn],num[maxn];
const int N = 7490;
int main()
{
    int s;
    while(~scanf("%d",&s) && s)
    {
        int n;
        scanf("%d",&n);
        for(int i = 0; i < n; i++)
        {
            scanf("%d",&num[i]);
            for(int j = 0; j < num[i];j++)
            {
                scanf("%d",&a[i][j]);
            }
        }

        int ans = 0,t = 0;
        for(int i = 0; i < n; i++)
        {

           int maxv = s * a[i][num[i] - 1];
           memset(dp,INF,sizeof(dp));
           dp[0] = 0;
           for(int j = 0; j < num[i]; j++)
           {
               for(int k = a[i][j]; k <= maxv; k++)
               {
                   dp[k] = min(dp[k],dp[k - a[i][j]] + 1);
               }
           }
//           for(int j = 0; j < num[i]; j++)
//             printf("%d ",a[i][j]);
//           printf("\n");
//           for(int j = 0; j <= maxv; j++)
//               printf("%d ",dp[j]);
          // printf("\n");
           int temp;
           for(int j = 1; j <= maxv; j++)
           {
               if(dp[j] > s)
               {
                   temp = j - 1;
                   break;
               }
               else if(j == maxv)
                temp = maxv;
           }
           if(temp > ans)
           {
              ans = temp;
              t = i;
           }
            else if(ans == temp)
            {
                if(num[i] < num[t])
                    t = i;
                else if(num[i] == num[t])
                {
                    if(a[i][num[i] - 1] < a[t][num[t] - 1])
                        t = i;
                }
            }
           // printf("%d\n",t);
//            for(int j = 0; j < num[t]; j++)
//                printf("%d ",a[i][j]);
//            printf("\n");
        }
       // printf("%d\n",num[t]);
        printf("max coverage = %d :",ans);
        for(int j = 0; j < num[t]; j++)
        {
            printf(" %d",a[t][j]);
        }
        printf("\n");
    }
    return 0;
}
