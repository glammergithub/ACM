/***********蓝桥杯第五届*****************/
//第一题
/*
#include<cstdio>
#include<iostream>
using namespace std;
int main()
{
	int flag = 0,ans;
	for(int i = 0; !flag ;i++)
	{
		double tmp = i * 2.3;
		for(int j = i + 1;j * 1.9 + tmp <= 82.3; j++)
		{
			if(j * 1.9 + tmp == 82.3)
			{
				ans = i;
				flag = 1;
				break;
			}
		}
	}
	cout<<ans<<endl;

	return 0;
} */
//11
//第二题
/*
#include<cstdio>
using namespace std;
int main()
{
	int ans = 1;
	for(int i = 1; i <= 10; i++)
	   ans *= 2;
	printf("%d\n",(ans / 2) * 2 + 1);
	return 0;
 }
 //1025 左边总是比右边多一个，右边是2^n-1
 */
//第三题 QWQ首先枚举所有的状态的时候0没有补上，然后最后一位是14错了好几次WWW
/*
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
int main()
{
	int a[20],num = 0;
	for(int i = 0; i < (1 << 15); i++)
	{
			memset(a,0,sizeof(a));
			int cnt = 0;
			int tmp = i;
			while(tmp)
			{
				a[cnt++] = tmp & 1;
				tmp >>= 1;
			}
			for(int j = cnt; j < 15; j++)
			    a[j] = 0;
			reverse(a,a + 15);
			int res = 2,res1 = 0,res2 = 0;
			for(int j = 0; j < 15; j++)
			{
				if(a[j])
				{
				   res1++;
				   res--;
				}
				else
				{
					res2++;
					res *= 2;
				}
			}
			if(res == 0 && res1 == 10 && res2 == 5 && a[14])
			{
			   num++;
			}
	}
	cout<<num<<endl;
	return 0;
 }
*/
/*
//第四题
//计算个位
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
int ge_wei(int a) {
	if(a % 2 == 0)
		return (a * 2) % 10;
	else
		return (a * 2 + 5) % 10;
}


//计算进位
int jin_wei(char* p) {
	char* level[] = {
		"142857",
		"285714",
		"428571",
		"571428",
		"714285",
		"857142"
	};

	char buf[7];
	buf[6] = '\0';
	strncpy(buf,p,6);

	int i;
	for(i=5; i>=0; i--) {
		int r = strcmp(level[i], buf);
		if(r<0) return i+1;
		while(r==0) {
			p += 6;
			strncpy(buf,p,6);
			r = strcmp(level[i], buf);
			if(r<0) return i+1;
			if(r > 0)return i;  //填空
		}
	}

	return 0;
}


//多位数乘以7
void f(char* s) {
	int head = jin_wei(s);
	if(head > 0) printf("%d", head);

	char* p = s;
	while(*p) {
		int a = (*p-'0');
		int x = (ge_wei(a) + jin_wei(p+1)) % 10;
		printf("%d",x);
		p++;
	}

	printf("\n");
}


int main() {
	f("428571428571");
	f("34553834937543");
	return 0;
}
*/
//第五题
//一开始就从最复杂的那个图形开始想了，应该从最简单的图形找规律，再推广到一般
/*#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
#define N 70


void f(char a[][N], int rank, int row, int col) {
	if(rank==1) {
		a[row][col] = '*';
		return;
	}

	int w = 1;
	int i;
	for(i=0; i<rank-1; i++) w *= 2;

	f(a,rank - 1,row,col + w / 2);
	f(a, rank-1, row+w/2, col);
	f(a, rank-1, row+w/2, col+w);
}


int main() {
	char a[N][N];
	int i,j;
	for(i=0; i<N; i++)
		for(j=0; j<N; j++) a[i][j] = ' ';

	f(a,6,0,0);

	for(i=0; i<N; i++) {
		for(j=0; j<N; j++) printf("%c",a[i][j]);
		printf("\n");
	}

	return 0;
}*/
/*
//第六题 终于做对一道了哈哈哈 又zz犯了循环的变量做运算的事了QWQ
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
int gcd(int x,int y)
{

	//if(x < y)swap(x,y);
	if(y == 0)return x;
	return gcd(y,x % y);
}
int main()
{
	int cnt = 0;
	for(int a = 1; a <= 9; a++)
	   for(int b = 1; b <= 9; b++)
	   {
	   	  if(b == a)continue;
	   	  for(int c = 1; c <= 9; c++)
	   	      for(int d = 1; d <= 9; d++)
	   	      {
	   	      	 if(d == c)continue;
	   	      	 int x = a * 10 + c;
	   	      	 int y = b * 10 + d;
	   	      	 int u,v;
	   	      	 int gcdx,gcdy;
	   	      	 gcdx = gcd(x,y);
	   	      	// cout<<x<<" "<<y<<" "<<gcdx<<endl;
	   	      	 x /= gcdx;
	   	      	 y /= gcdx;
	   	      	 u = a * c;
	   	      	 v = b * d;
	   	      	 gcdy = gcd(u,v);
	   	      	 u /= gcdy;
	   	      	 v /= gcdy;
	   	      	 //cout<<x<<" "<<y<<" "<<a<<" "<<b<<endl;
	   	      	 if(x == u && y == v)
	   	      	 cnt++;
			  }
	   }
	   cout<<cnt<<endl;
	return 0;
}*/
/*
//第七题 暴力枚举 一开始没敢枚举以为时间会很长，第一，这个不看罚时只要结果输出出来就行，第二其实不用那么多复杂度，因为数字要求是不同的
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
int main()
{
	int ans = 0;
   for(int a1 = 1; a1 <= 12; a1++)
   {
   	  if(a1 == 1 || a1 == 3 || a1 == 8)
   	     continue;
   	  for(int a2 = 1; a2 <= 12; a2++)
   	  {
   	  	 if(a2 == 1 || a2 == 3 || a2 == 8 || a2 == a1)
   	  	    continue;
   	  	 for(int a3 = 1; a3 <= 12; a3++)
   	  	 {
   	  	 	if(a3 == 1 || a3 == 3 || a3 == 8 || a3 == a1 || a3 == a2)
   	  	 	  continue;
   	  	 	for(int a4 = 1; a4 <= 12; a4++)
   	  	 	 {
   	  	 	 	if(a4 == 1 || a4 == 3 || a4 == 8|| a4 == a1 || a4 == a2 || a4 == a3)
   	  	 	 	  continue;
   	  	 	 	for(int a5 = 1; a5 <= 12; a5++)
   	  	 	 	{
   	  	 	 		if(a5 == 1 || a5 == 3 || a5 == 8 || a5 == a1 || a5 == a2 || a5 == a3 || a5 == a4)
   	  	 	 		  continue;
   	  	 	 		for(int a6 = 1; a6 <= 12; a6++)
   	  	 	 		{
						if(a6 == 1 || a6 == 3 || a6 == 8 || a6 == a1 || a6 == a2 || a6 == a3 || a6== a4 || a6 == a5)
						  continue;
						 for(int a7 = 1; a7 <= 12; a7++)
						 {
						 	if(a7 == 1 || a7 == 3 || a7 == 8 || a7 == a1 || a7 == a2 || a7 == a3 || a7 == a4 || a7 == a5 || a7 == a6)
						 	continue;
						 	for(int a8 = 1; a8 <= 12; a8++)
						 {
						 	if(a8 == 1 || a8 == 3 || a8 == 8 || a8 == a1 || a8 == a2 || a8 == a3 || a8 == a4 || a8 == a5 || a8 == a6 || a8 == a7)

						 	continue;
						 	for(int a9 = 1; a9 <= 12; a9++)
						 {
						 	if(a9 == 1 || a9 == 3 || a9 == 8 || a9 == a1 || a9 == a2 || a9 == a3 || a9 == a4 || a9 == a5 || a9 == a6 || a9 == a7 || a9 == a8)
						 	continue;
						 	int t1 = a1 + a2 + a3 + 8;
						 	int t2 = a3 + a4 + a6 + 3;
						 	int t3 = 8 + 3 + a7 + a8;
						 	int t4 = 1 + a2 + a4 + a5;
						 	int t5 = a5 + a6 + a7 + a9;
						 	int t6 = 1 + a1 + a8 + a9;
						 	if(t1 == t2 && t2 == t3 && t3 == t4 && t4 == t5 && t5 == t6)
						 	{
						 		ans = a8;
							}
						 }
						 }
						 }

					}
				}
			 }
		 }
	  }
   }
   cout<<ans<<endl;
   return 0;
}*/
/*
//第七题 DFS深搜
#include<cstdio>
#include<iostream>
using namespace std;
int a[9],vis[15],ans;
void judge()
{
	int t1 = a[0] + a[1] + a[2] + 8;
	int t2 = a[2] + a[3] + a[5] + 3;
	int t3 = 3 + 8 + a[6] + a[7];
	int t4 = 1 + a[1] + a[3] + a[4];
	int t5 = a[4] + a[5] + a[6] + a[8];
	int t6 = 1 + a[0] + a[7] + a[8];
	if(t1 == t2 && t2 == t3 && t3 == t4 && t4 == t5 && t5 == t6)
	{
	   ans = a[7];
	}
	return;
}
void dfs(int d)
{
	if(d == 9)
	{
		judge();
		return;
	}
	for(int i = 1; i <= 12; i++)
	{
		if(!vis[i] && i != 3 && i != 1 && i != 8)
		{
			vis[i] = 1;
			a[d] = i;
			dfs(d + 1);
			vis[i] = 0;
		}
	}
}
int main()
{
	dfs(0);
	cout<<ans<<endl;
	return 0;
}*/
/*第八题 这道题一开始写了暴力，发现越写越复杂，原来还是有规律可循的...
#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
using namespace std;
int main() {
	int n;
	cin>>n;
	int a[100];
	for(int i = 0; i < n; i++)
	    cin>>a[i];
	int cnt = 1,flag = 0;
	for(int i = 1; i < n; i++)
	{
		if(a[0] > 0)
		{
			if(a[i] < 0 && abs(a[i]) > abs(a[0]))
			   flag = 1;
		}
		else
		{
			if(a[i] > 0 && abs(a[i]) < abs(a[0]))
			   flag = 1;
		}
	}
	if(!flag)
	{
		cout<<1<<endl;
	}
	else
	{
		for(int i = 1; i < n; i++)
	{
		if(a[0] > 0)
		{
			if(a[i] < 0 && abs(a[i]) > abs(a[0]))
			  cnt++;
			if(a[i] > 0 && abs(a[i]) < abs(a[0]))
			  cnt++;
		}
		else
		{
			if(a[i] > 0 && abs(a[i]) < abs(a[0]))
			  cnt++;
			if(a[i] < 0 && abs(a[i]) > abs(a[0]))
			  cnt++;
		}
	}
	cout<<cnt<<endl;
	}

	return 0;
}
*/
//第九题  记忆话搜索 
/*#include<cstdio>
#include<cstring>
#include<iostream>
using namespace std;
int n,m,k;
int mp[60][60];
int dp[60][60][15][15];
int dir[2][2] = {{0,1},{1,0}};
int mod = 1000000007;
int dfs(int x,int y,int maxx,int p)
{
	int res = 0;
	if(dp[x][y][maxx][p] != -1)return dp[x][y][maxx][p];
	if(x == n - 1 && y == m - 1)
	{
		if((p == k - 1 && mp[x][y] > maxx) || p == k)
		{
			res++;
			dp[x][y][maxx][p] = res;
			return dp[x][y][maxx][p];
		}
		return dp[x][y][maxx][p] = 0;
	}
	if(p > k)return dp[x][y][maxx][p] = 0;
	for(int i = 0; i < 2; i++)
	{
		int xx = x + dir[i][0];
		int yy = y + dir[i][1];
		if(xx >= 0 && xx < n && yy >= 0 && yy < m)
		{
			if(mp[x][y] > maxx)
			{
				res += dfs(xx,yy,mp[x][y],p + 1);
				res %= mod;
			}
			res += dfs(xx,yy,maxx,p);
			res %= mod;
		}
	}
	dp[x][y][maxx][p] = res;
	return dp[x][y][maxx][p];
}
int main()
{
	cin>>n>>m>>k;
	for(int i = 0; i < n; i++)
	    for(int j = 0; j < m; j++)
	    {
	       cin>>mp[i][j];
		   mp[i][j]++;
		}
	memset(dp,-1,sizeof(dp));
	cout<<dfs(0,0,0,0) % mod<<endl;
	return 0;
}*/
/* 
#include<cstdio>
#include<iostream>
#include<cstring>
using namespace std;
typedef long long ll;
int n,m,k,ex,ey;
ll res;
const int mod = 1000000007;
int dir[2][2] = {{0,1},{1,0}}; 
int mp[60][60];
int dp[60][60][15][15];
int dfs(int x,int y,int maxx,int p)
{
	int res = 0;
	if(dp[x][y][maxx][p] != -1)return dp[x][y][maxx][p];
	//cout<<x<<" "<<y<<" "<<p<<endl; 
	if(x == ex && y == ey)//先判断到没到终点而不是是否用了K个物品，因为之后还可以都不用到终点 
	{
		if(p == k)
		  {
		  	res++;
		  	//cout<<1<<endl;
		  	dp[x][y][maxx][p] = res;
		  	return dp[x][y][maxx][p];
		  }
		//cout<<1<<endl;
		return dp[x][y][maxx][p] = 0;
	}
	if(p > k)return dp[x][y][maxx][p] = 0;
	//cout<<1<<endl;
	for(int i = 0; i < 2; i++)
	{
		int xx = x + dir[i][0];
		int yy = y + dir[i][1];
		if(xx >= 0 && xx < n && yy >= 0 && yy < m)
		{
			//cout<<1<<endl;
			if(mp[xx][yy] > maxx)
			{
			//	cout<<1<<endl;
				res += dfs(xx,yy,mp[xx][yy],p + 1);
				res %= mod;
			}
			res += dfs(xx,yy,maxx,p);
			res %= mod; 
		}
	}
	//cout<<res<<endl;
	dp[x][y][maxx][p] = res;
	return dp[x][y][maxx][p];
}
int main()
{
	
	cin>>n>>m>>k;
	
	for(int i = 0; i < n; i++)
	    for(int j = 0; j < m; j++)
	{
	       cin>>mp[i][j];
		     mp[i][j]++;
	}
	ex = n - 1;
	ey = m - 1;
	//dp[0][0][0][0] = 0;
	memset(dp,-1,sizeof(dp));
	int ans = 0;
	ans += dfs(0,0,0,0);
	ans %= mod;
	memset(dp,-1,sizeof(dp));//清空数组别忘了 
	ans += dfs(0,0,mp[0][0],1);
	ans %= mod;
	cout<<ans<<endl;
	return 0;
}
*/
