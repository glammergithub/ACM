//蓝桥杯第八届 
//第一题 QWQ 这道题首先用骚操作使得文本中的*消去，折替换，但是一开始忘记了整数折还得换一下，直接手动输入就好 
#/*include<cstdio>
using namespace std;
int main()
{
	freopen("data.txt","r",stdin);
	double a,b;
	double res = 0.0;
	while(~scanf("%lf%lf",&a,&b))
	{
		res += a * b / 100.0;
	}
	int i;
	for( i = 100;; i += 100)
	{
		if(i > res)
		{
			printf("%d\n",i);
			break;
		}
	}
	return 0;
}*/
//第二题 线性素数筛+暴力 找到所有的素数，枚举公差，N自己定
/* 
#include<cstdio>
using namespace std;
const int maxn = 1e6 + 10;
int vis[maxn],prime[maxn];
int num;
void shaizi()
{
	for(int i = 2; i < maxn ; i++)
	{
		if(!vis[i])
		{
			prime[num++] = i;
		}
		for(int j = i * 2; j < maxn; j += i)
		{
			vis[j] = 1;
		}
	}
}
int main()
{
	shaizi();
	for(int i = 1; i * 10 < maxn; i++)
	{
		for(int j = 0; j < num; j++)
	    {
	    	int flag = 1,tmp = prime[j];
	    	for(int k = 0; k < 10; k++)
	    	{
	    		if(!vis[tmp] && tmp < maxn)
	    		{
	    			tmp = tmp + i;
				}
	    		else 
	    		{
	    			flag = 0;
	    			break;
				}
			}
			if(flag)
			{
				printf("%d\n",i);
				return 0;
			}
		}
	}
	    
	return 0;
} */
//第三题  文件读取 然后按照题意累加重量，printf double类型的数据 
/*#include<cstdio>
#include<iostream>
using namespace std;
double num[50][50];
int main()
{
	freopen("data.txt","r",stdin);
	for(int i = 1 ;i <= 29; i++)
	{
		for(int j = 1; j <= i; j++)
		{
			cin>>num[i][j];
		}
	}
	for(int i = 2; i <= 30; i++)
	{
		for(int j = 1; j <= i; j++)
		{
			if(j == 1)
			{
				num[i][j] += num[i - 1][j] / 2.0;
			}
			else if(j == i)
			{
				num[i][j] += num[i - 1][j - 1] / 2.0;
			}
			else num[i][j] += (num[i - 1][j - 1] / 2.0 + num[i - 1][j] / 2.0);
		}
	}
	double maxx = 0.0,minx = 100000000.0;
	for(int i = 1; i <= 30; i++)
	{
		if(num[30][i] >= maxx)
		{
			maxx = num[30][i];
		}
		if(num[30][i] <= minx)
		{
			minx = num[30][i];
		}
	}
	//cout<<minx<<endl;
	printf("%lf\n",maxx * (long long)2086458231 / minx);
	//cout<<maxx * (double)2086458231 / minx<<endl;
	return 0;
}
*/
//第四题 找规律 观察图形发现 两部分关于中心点中心对称，相对应的两个
//方块行和为6，列和为6，然后搜索四个方向，找到边的下一个为止，因为必须得遍历边的所有情况，
//分割成两部分对应中心的另一条边，然后找所有情况，注意四个方向除以4 
/*
#include<cstdio>
#include<iostream>
using namespace std;
int mp[10][10];
const int N = 6;
int dir[4][2] = {{0,1},{0,-1},{1,0},{-1,0}};
int ans = 0;
void dfs(int x,int y)
{
	if(x == 0 || y == 0 || x == N || y == N)
	  {
	  	  ans++;
	  	  return ;
	  }
	for(int i = 0; i < 4; i++)
	{
		int xx = x + dir[i][0];
		int yy = y + dir[i][1];
		if(mp[xx][yy])
		   continue;
		mp[xx][yy] = 1;
		mp[N - xx][N - yy] = 1;
		dfs(xx,yy);
		mp[xx][yy] = 0;
		mp[N - xx][N - yy] = 0;
	}
}
int main()
{
	mp[N / 2][N / 2] = 1;
	dfs(N / 2, N / 2);
	cout<<ans / 4<<endl;
	return 0;
}
509
*/
//第五题
/*
#include<cstdio>
using namespace std;
int len(int x){
    if(x<10) return 1;
    return len(x/10)+1;
}

// 取x的第k位数字
int f(int x, int k){
    if(len(x)-k==0) return x%10;
    return f(x / 10,k);  //填空
}

int main()
{
    int x = 23574;
    printf("%d\n", f(x,3));
    return 0;
} */
//f(x / 10,k)终于会做一道题了...
//第六题
/*
#include <stdio.h>
#include <string.h>

#define N 256
int f(const char* s1, const char* s2)
{
    int a[N][N];
    int len1 = strlen(s1);
    int len2 = strlen(s2);
    int i,j;

    memset(a,0,sizeof(int)*N*N);
    int max = 0;
    for(i=1; i<=len1; i++){
        for(j=1; j<=len2; j++){
            if(s1[i-1]==s2[j-1]) {
                a[i][j] = a[i - 1][j - 1] + 1;  //填空
                if(a[i][j] > max) max = a[i][j];
            }
        }
    }

    return max;
}

int main()
{
    printf("%d\n", f("abcdefgkkk", "baabcdefgadabc"));
    return 0;
}
*/
//终于又会一道了... 
//第七题 流泪的一道题 本来就是一道水题，但是没看清条件，多写了好多行...
//然后if else 并列条件总错...比赛重在参与吧QWQ
/* 
#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
struct node
{
	int y,m,r;
}nod[50];
int y1[13] = {0,31,28,31,30,31,30,31,31,30,31,30,31};
int y2[13] = {0,31,29,31,30,31,30,31,31,30,31,30,31};
bool judge(int y)
{
	if(y % 400 == 0 || (y % 4 == 0 && y % 100 != 0))
	   return true;
	return false;
}
bool cmp(node a,node b)
{
    if(a.y != b.y)
	return a.y < b.y;
	else if(a.m != b.m)
	return a.m < b.m;
	else 
	return a.r < b.r;
}
int main()
{
	int a[3];
	scanf("%d/%d/%d",&a[0],&a[1],&a[2]);
	int tmp1,tmp2,tmp3;
	tmp1 = a[0];tmp2 = a[1];tmp3 = a[2];
	//sort(a,a + 3);
	//printf("%d %d %d\n",a[0],a[1],a[2]);
	int cnt = 0;
	if(a[0] >= 0 && a[0] <= 59)
	{
		a[0] += 2000;
		if(judge(a[0]))
		{
			if(a[1] >= 1 && a[1] <= 12 && a[2] != 0 && a[2] <= y2[a[1]])
			{
				nod[cnt].y = a[0];
				nod[cnt].m = a[1];
				nod[cnt].r = a[2];
				cnt++;
			}
		}
		else 
		{
			if(a[1] >= 1 && a[1] <= 12 && a[2] != 0 && a[2] <= y1[a[1]])
			{
				nod[cnt].y = a[0];
				nod[cnt].m = a[1];
				nod[cnt].r = a[2];
				cnt++;
			}
		}
	}
	else if(a[0] >= 60 && a[0] <= 99)
	{
		a[0] += 1900;
		if(judge(a[0]))
		{
			if(a[1] >= 1 && a[1] <= 12 && a[2] != 0 && a[2] <= y2[a[1]])
			{
				nod[cnt].y = a[0];
				nod[cnt].m = a[1];
				nod[cnt].r = a[2];
				cnt++;
			}
		}
		else 
		{
			if(a[1] >= 1 && a[1] <= 12 && a[2] != 0 && a[2] <= y1[a[1]])
			{
				nod[cnt].y = a[0];
				nod[cnt].m = a[1];
				nod[cnt].r = a[2];
				cnt++;
			}
		}
	}
	a[0] = tmp1;a[1] = tmp2;a[2] = tmp3;
	if(a[2] >= 0 && a[2] <= 59)
	{
		a[2] += 2000;
		if(judge(a[2]))
		{
			if(a[0] >= 1 && a[0] <= 12 && a[1] != 0 && a[1] <= y2[a[0]])
			{
				//cout<<1<<endl;
				nod[cnt].y = a[2];
				nod[cnt].m = a[0];
				nod[cnt].r = a[1];
				cnt++;
			}
			if(a[1] >= 1 && a[1] <= 12 && a[0] != 0 && a[0] <= y2[a[1]]) 
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[1];
				nod[cnt].r = a[0];
				cnt++;
			}
		}
		else 
		{
			if(a[0] >= 1 && a[0] <= 12 && a[1] != 0 && a[1] <= y1[a[0]])
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[0];
				nod[cnt].r = a[1];
				cnt++;
			}
			if(a[1] >= 1 && a[1] <= 12 && a[0] != 0 && a[0] <= y1[a[1]]) 
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[1];
				nod[cnt].r = a[0];
				cnt++;
			}
		}
	}
	else if(a[2] >= 60 && a[2] <= 99)
	{
		a[2] += 1900;
		if(judge(a[2]))
		{
			if(a[0] >= 1 && a[0] <= 12 && a[1] != 0 && a[1] <= y2[a[0]])
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[0];
				nod[cnt].r = a[1];
				cnt++;
			}
			if(a[1] >= 1 && a[1] <= 12 && a[0] != 0 && a[0] <= y2[a[1]]) 
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[1];
				nod[cnt].r = a[0];
				cnt++;
			}
		}
		else 
		{
			if(a[0] >= 1 && a[0] <= 12 && a[1] != 0 && a[1] <= y1[a[0]])
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[0];
				nod[cnt].r = a[1];
				cnt++;
			}
			if(a[1] >= 1 && a[1] <= 12 && a[0] != 0 && a[0] <= y1[a[1]]) 
			{
				nod[cnt].y = a[2];
				nod[cnt].m = a[1];
				nod[cnt].r = a[0];
				cnt++;
			}
		}
	}
	//cout<<cnt<<endl;
	sort(nod,nod + cnt,cmp);
	for(int i = 0; i < cnt; i++)
	{
		printf("%d-%02d-%02d\n",nod[i].y,nod[i].m,nod[i].r);
	}
	//cout<<a<<b<<c<<endl;
	return 0;
}
*/
//第八题 无限用扩展欧几里得定理计算最大公约数 有限用完全背包判断没有装的物品 
/*
#include<cstdio>
#include<iostream>
#include<ctime>
#include<cstdlib>
using namespace std;
const int maxn = 1e4 + 10;
const int N = 1e4 + 10;
int dp[maxn],a[110];
int gcd(int a,int b)
{
	if(b == 0)return a;
	else return gcd(b,a % b);
}
int main()
{
	//freopen("data.txt","w",stdout);
	//srand(time(NULL));
	//int m = 100;
	//while(m--)
	// printf("%d\n",rand() % 100);
	//freopen("data.txt","r",stdin);
    //freopen("out1.txt","w",stdout);
    
   
	int n;
	cin>>n;
	for(int i = 1; i <= n; i++)
	    cin>>a[i];
	int x = a[1];
	for(int i = 2; i <= n; i++) 
	{
		x = gcd(x,a[i]);
	}
	//printf("%d\n",x);
	if(x != 1)
	{
		printf("INF\n");
	}
	else 
	{
		for(int i = 1; i <= n; i++)
		   for(int j = a[i]; j < maxn; j++)
		   {
		   	  dp[j] = max(dp[j],dp[j - a[i]] + a[i]);
		   }
		int cnt = 0;
		for(int j = 0; j < maxn; j++)
		{
			if(dp[j] != j)
			   cnt++;
		}
		cout<<cnt<<endl;
	}
	return 0;
} */
//第九题 二分查找满足条件的最大边长
/* 
#include<cstdio>
#include<iostream>
using namespace std;
const int maxn = 1e5 + 10;
typedef long long ll;
struct node
{
	ll h,k;
}nod[maxn];
int n,k;
int judge(ll x)
{
	ll cnt = 0; 
	for(int i = 1; i <= n; i++)
	{
		cnt += ((nod[i].h / x) * (nod[i].k / x));
	}
	if(cnt >= k)
	  return 1;
	  else return 0;
}
int main()
{
	cin>>n>>k;
	for(int i = 1; i <= n; i++)
	   cin>>nod[i].h>>nod[i].k;
	   
	ll l = 1,r = maxn;
	ll res = 0;
	while(l <= r)
	{
		//cout<<1<<endl;
		ll mid = (l + r) / 2;
		//cout<<mid<<endl;
		if(judge(mid))
		{
			res = mid;
			l = mid + 1;
		}
		else r = mid - 1;
	}
	cout<<res<<endl;
	return 0;
 } 
*/
//第十题 这道题做过2333 就是取前缀和然后判断有多少个相等的 过了... 
#include<cstdio>
#include<iostream>
using namespace std;
typedef long long ll;
const int maxn = 5e5 + 10;
ll a[maxn],sum[maxn],res[maxn];
int main()
{
	int n,k;
	cin>>n>>k;
	for(int i = 1; i <= n; i++)
	   cin>>a[i];
	for(int i = 1; i <= n; i++)
	{
		sum[i] = sum[i - 1] + a[i];
		ll t = sum[i] % k;
		res[t]++; 
	}
	ll ans = 0;
	for(int i = 0; i <= maxn; i++)
	{
		ans += res[i] * (res[i] - 1) / 2;
	}
	ans += res[0];
	ans %= 1234567;
	cout<<ans<<endl;
	return 0;
}
